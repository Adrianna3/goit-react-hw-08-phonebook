{"version":3,"file":"static/js/665.784f451d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/section/Section.module.css?cc42","components/section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/SearchFilter/SearchFilter.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionTitle\":\"Section_sectionTitle__V-Xfr\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  const { sectionTitle } = styles;\n\n  return (\n    <section>\n      <h2 className={sectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectAllContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleItems = createSelector(\n  [selectAllContacts, selectFilter],\n  (items, filter) => {\n    if (filter === '') return items;\n    const filteredArray = items.filter(item => {\n      const filtered = filter.toLowerCase();\n      return item.name.toLowerCase().includes(filtered);\n    });\n    return filteredArray;\n  }\n);\n","import styles from './ContactForm.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n// import { Form } from 'react-bootstrap';\n// import { Button } from 'react-bootstrap';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n    \n\n    if (contacts.find(cont => cont.name === name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n   const { form, label, input, addBtn } = styles;\n\n  return (\n    <form className={form} onSubmit={handleSubmit}>\n      <label className={label}>\n        Name\n        <input\n          className={input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={label}>\n        Number\n        <input\n          className={input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={addBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Contact_btn__JzanX\"};","import styles from './Contact.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button } from 'react-bootstrap';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <span className=\"me-2\">\n        {contact.name}: {contact.number}\n      </span>\n      <Button\n        type=\"button\"\n        className={styles.btn}\n        variant=\"outline-primary\"\n        onClick={handleDelete}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styles from './ContactList.module.css';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleItems } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleItems = useSelector(selectVisibleItems);\n\n  const { contactsList } = styles;\n  return (\n    <ul className={contactsList}>\n      {visibleItems.map(contact => (\n        <li key={contact.id} className={styles.item}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { handleFilter } from 'redux/contacts/contactsSlice';\nimport { Form } from 'react-bootstrap';\n\nexport const SearchFilter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(handleFilter(filter));\n  }, [filter, dispatch]);\n\n  const handleChange = evt => {\n    setFilter(evt.target.value);\n  };\n\n  return (\n    <Form className=\"mb-1\">\n      <Form.Group>\n        <Form.Label>Find contacts by Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsPage_wrapper__HYOyv\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { SearchFilter } from 'components/SearchFilter/SearchFilter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport styles from './ContactsPage.module.css';\nimport { Section } from '../../components/section/Section';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const { wrapper } = styles;\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={wrapper}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <SearchFilter />\n        {isLoading && <p>'Loading'</p>}\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n\n\nexport default ContactsPage;\n"],"names":["Section","title","children","sectionTitle","styles","className","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectAllContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleItems","filter","item","filtered","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","form","label","input","addBtn","onSubmit","evt","preventDefault","currentTarget","number","cont","alert","addContact","reset","type","pattern","required","Contact","contact","Button","variant","onClick","deleteContact","id","ContactList","visibleItems","contactsList","SearchFilter","useState","setFilter","useEffect","handleFilter","Form","onChange","target","wrapper","fetchContacts"],"sourceRoot":""}